name: Release
on:
  pull_request:
    branches:
      - "main"
  workflow_dispatch:
jobs:
    build-linux-x64:
      name: Build Linux x64
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Build DownloadArchive.Lib (linux-x64)
          run: dotnet publish DownloadArchive.Lib -r linux-x64 -o artifacts/native-libs/linux-x64

        - name: Build DownloadArchive.BuildTasks (linux)
          run: dotnet publish DownloadArchive.BuildTasks -r linux -f netstandard2.0 -o artifacts/tasks/netstandard2.0/linux

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: artifacts-linux-x64
            path: artifacts

    build-linux-arm64:
      name: Build Linux ARM64
      runs-on: ubuntu-24.04-arm
      steps:
        - uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Build DownloadArchive.Lib (linux-arm64)
          run: dotnet publish DownloadArchive.Lib -r linux-arm64 -o artifacts/native-libs/linux-arm64

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: artifacts-linux-arm64
            path: artifacts

    build-macos:
      name: Build macOS (x64 + arm64)
      runs-on: macos-latest
      steps:
        - uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Build macOS x64
          run: dotnet publish DownloadArchive.Lib -r osx-x64 -o artifacts/native-libs/osx-x64

        - name: Build macOS ARM64
          run: dotnet publish DownloadArchive.Lib -r osx-arm64 -o artifacts/native-libs/osx-arm64

        - name: Build macOS Tasks
          run: dotnet publish DownloadArchive.BuildTasks -r osx -f netstandard2.0 -o artifacts/tasks/netstandard2.0/osx

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: artifacts-osx
            path: artifacts

    build-windows:
      name: Build Windows (x64 + x86 + arm64)
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Build Windows x64
          run: dotnet publish DownloadArchive.Lib -r win-x64 -o artifacts/native-libs/win-x64

        - name: Build Windows x86
          run: dotnet publish DownloadArchive.Lib -r win-x86 -o artifacts/native-libs/win-x86

        - name: Build Windows ARM64
          run: dotnet publish DownloadArchive.Lib -r win-arm64 -o artifacts/native-libs/win-arm64

        - name: Build Windows Tasks netstandard2.0
          run: dotnet publish DownloadArchive.BuildTasks -r win -f netstandard2.0 -o artifacts/tasks/netstandard2.0/win

        - name: Build Windows Tasks
          run: dotnet publish DownloadArchive.BuildTasks -r win -f net46 -o artifacts/tasks/net46

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: artifacts-win
            path: artifacts

    pack:
        name: Pack
        runs-on: ubuntu-latest
        needs: [build-linux-x64, build-linux-arm64, build-macos, build-windows]
        steps:
        - uses: actions/checkout@v4

        - name: Download all artifacts
          uses: actions/download-artifact@v4
          with:
            pattern: artifacts-*
            path: artifacts
            merge-multiple: true

        - name: Show downloaded structure
          run: |
            echo "=== Artifacts Directory ==="
            tree artifacts || ls -R artifacts

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Pack DownloadArchive
          run: |
            dotnet pack DownloadArchive \
              -p:DownloadArchiveNativeLibsDir="$(pwd)/artifacts/native-libs" \
              -p:DownloadArchiveTasksDir="$(pwd)/artifacts/tasks"

        - name: Show NuGet package contents
          run: |
            mkdir pkg
            for nupkg in DownloadArchive/bin/Release/*.nupkg; do
              echo "=== Contents of $nupkg ==="
              unzip -l "$nupkg"
              echo ""
            done

        - name: Upload package
          uses: actions/upload-artifact@v4
          with:
            name: package
            path: DownloadArchive/bin/Release

    test-linux-x64:
      name: Build Linux x64
      runs-on: ubuntu-latest
      needs: ["pack"]
      steps:
        - uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.x

        - name: Download package
          uses: actions/download-artifact@v4
          with:
            name: package
            path: package

        - name: Remove existing nuget
          run: dotnet remove ./DownloadArchive.ExampleWithNuget/DownloadArchive.ExampleWithNuget.csproj package DownloadArchive

        - name: Add nuget from archive
          run: dotnet add ./DownloadArchive.ExampleWithNuget/DownloadArchive.ExampleWithNuget.csproj package DownloadArchive --source package

        - name: Build ExampleWithNuget project
          run: dotnet build ./DownloadArchive.ExampleWithNuget/DownloadArchive.ExampleWithNuget.csproj
          env:
            LD_DEBUG: true
