<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="DownloadArchiveOSPlatform;DownloadArchiveOSArchitecture;DownloadArchiveRuntime;DownloadArchiveLibName;DownloadArchiveLib;DownloadArchiveTasksLib">
    <PropertyGroup>
        <DownloadArchiveOSPlatform Condition="$([MSBuild]::IsOSPlatform('windows'))">win</DownloadArchiveOSPlatform>
        <DownloadArchiveOSPlatform Condition="$([MSBuild]::IsOSPlatform('osx'))">osx</DownloadArchiveOSPlatform>
        <DownloadArchiveOSPlatform Condition="$([MSBuild]::IsOSPlatform('linux'))">linux</DownloadArchiveOSPlatform>
        <DownloadArchiveOSArchitecture>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLower())</DownloadArchiveOSArchitecture>
        <DownloadArchiveRuntime>$(DownloadArchiveOSPlatform)-$(DownloadArchiveOSArchitecture)</DownloadArchiveRuntime>
        <DownloadArchiveLibName Condition="$([MSBuild]::IsOSPlatform('windows'))">DownloadArchive.Lib.dll</DownloadArchiveLibName>
        <DownloadArchiveLibName Condition="$([MSBuild]::IsOSPlatform('osx'))">DownloadArchive.Lib.dylib</DownloadArchiveLibName>
        <DownloadArchiveLibName Condition="$([MSBuild]::IsOSPlatform('linux'))">DownloadArchive.Lib.so</DownloadArchiveLibName>

        <DownloadArchiveLib Condition="'$(_DebugDownloadArchive)' == 'True'">$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', '..', '..', 'DownloadArchive.Lib', 'bin', 'Release', 'net9.0', '$(DownloadArchiveRuntime)', 'publish', '$(DownloadArchiveLibName)'))))</DownloadArchiveLib>
        <DownloadArchiveLib Condition="'$(_DebugDownloadArchive)' != 'True'">$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', '..', 'native-libs', '$(DownloadArchiveRuntime)', '$(DownloadArchiveLibName)'))))</DownloadArchiveLib>

        <DownloadArchiveTasksLib Condition="'$(_DebugDownloadArchive)' == 'True'">$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', '..', '..', 'DownloadArchive.BuildTasks', 'bin', 'Debug', 'netstandard2.0', 'DownloadArchive.BuildTasks.dll'))))</DownloadArchiveTasksLib>
        <DownloadArchiveTasksLib Condition="'$(_DebugDownloadArchive)' != 'True'">$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', '..', 'tasks', 'netstandard2.0', 'DownloadArchive.BuildTasks.dll'))))</DownloadArchiveTasksLib>
    </PropertyGroup>

    <UsingTask TaskName="DownloadArchive.BuildTasks.CleanTask" AssemblyFile="$(DownloadArchiveTasksLib)"/>
    <UsingTask TaskName="DownloadArchive.BuildTasks.DownloadTask" AssemblyFile="$(DownloadArchiveTasksLib)"/>

    <Target Name="_RemoveArchiveBeforeClean" BeforeTargets="Clean">
        <CleanTask
                TargetDir="$(TargetDir)"
                InputItems="@(DownloadArchive)"
                IsTestProject="$(IsTestProject)"
                OutputType="$(OutputType)"
        />
    </Target>

    <Target Name="_DownloadArchiveAfterBuild" AfterTargets="Build">
        <DownloadTask
                DownloadArchiveLib="$(DownloadArchiveLib)"
                TargetDir="$(TargetDir)"
                InputItems="@(DownloadArchive)"
                RuntimeIdentifier="$(RuntimeIdentifier)"
                IsTestProject="$(IsTestProject)"
        />
    </Target>

    <Target Name="_DownloadArchiveAfterPublish" AfterTargets="Publish">
        <DownloadTask
                DownloadArchiveLib="$(DownloadArchiveLib)"
                TargetDir="$(TargetDir)"
                InputItems="@(DownloadArchive)"
                RuntimeIdentifier="$(RuntimeIdentifier)"
                IsTestProject="$(IsTestProject)"
        />
    </Target>
</Project>
